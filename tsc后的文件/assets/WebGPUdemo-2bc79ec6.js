(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))n(t);new MutationObserver(t=>{for(const i of t)if(i.type==="childList")for(const c of i.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&n(c)}).observe(document,{childList:!0,subtree:!0});function a(t){const i={};return t.integrity&&(i.integrity=t.integrity),t.referrerPolicy&&(i.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?i.credentials="include":t.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function n(t){if(t.ep)return;t.ep=!0;const i=a(t);fetch(t.href,i)}})();var V=1e-6,z=typeof Float32Array<"u"?Float32Array:Array;Math.hypot||(Math.hypot=function(){for(var e=0,r=arguments.length;r--;)e+=arguments[r]*arguments[r];return Math.sqrt(e)});function B(){var e=new z(16);return z!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0),e[0]=1,e[5]=1,e[10]=1,e[15]=1,e}function b(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function O(e,r,a){var n=r[0],t=r[1],i=r[2],c=r[3],s=r[4],l=r[5],h=r[6],f=r[7],o=r[8],d=r[9],p=r[10],y=r[11],w=r[12],M=r[13],P=r[14],u=r[15],v=a[0],g=a[1],x=a[2],m=a[3];return e[0]=v*n+g*s+x*o+m*w,e[1]=v*t+g*l+x*d+m*M,e[2]=v*i+g*h+x*p+m*P,e[3]=v*c+g*f+x*y+m*u,v=a[4],g=a[5],x=a[6],m=a[7],e[4]=v*n+g*s+x*o+m*w,e[5]=v*t+g*l+x*d+m*M,e[6]=v*i+g*h+x*p+m*P,e[7]=v*c+g*f+x*y+m*u,v=a[8],g=a[9],x=a[10],m=a[11],e[8]=v*n+g*s+x*o+m*w,e[9]=v*t+g*l+x*d+m*M,e[10]=v*i+g*h+x*p+m*P,e[11]=v*c+g*f+x*y+m*u,v=a[12],g=a[13],x=a[14],m=a[15],e[12]=v*n+g*s+x*o+m*w,e[13]=v*t+g*l+x*d+m*M,e[14]=v*i+g*h+x*p+m*P,e[15]=v*c+g*f+x*y+m*u,e}function U(e,r,a){var n=a[0],t=a[1],i=a[2],c,s,l,h,f,o,d,p,y,w,M,P;return r===e?(e[12]=r[0]*n+r[4]*t+r[8]*i+r[12],e[13]=r[1]*n+r[5]*t+r[9]*i+r[13],e[14]=r[2]*n+r[6]*t+r[10]*i+r[14],e[15]=r[3]*n+r[7]*t+r[11]*i+r[15]):(c=r[0],s=r[1],l=r[2],h=r[3],f=r[4],o=r[5],d=r[6],p=r[7],y=r[8],w=r[9],M=r[10],P=r[11],e[0]=c,e[1]=s,e[2]=l,e[3]=h,e[4]=f,e[5]=o,e[6]=d,e[7]=p,e[8]=y,e[9]=w,e[10]=M,e[11]=P,e[12]=c*n+f*t+y*i+r[12],e[13]=s*n+o*t+w*i+r[13],e[14]=l*n+d*t+M*i+r[14],e[15]=h*n+p*t+P*i+r[15]),e}function G(e,r,a){var n=a[0],t=a[1],i=a[2];return e[0]=r[0]*n,e[1]=r[1]*n,e[2]=r[2]*n,e[3]=r[3]*n,e[4]=r[4]*t,e[5]=r[5]*t,e[6]=r[6]*t,e[7]=r[7]*t,e[8]=r[8]*i,e[9]=r[9]*i,e[10]=r[10]*i,e[11]=r[11]*i,e[12]=r[12],e[13]=r[13],e[14]=r[14],e[15]=r[15],e}function R(e,r,a){var n=Math.sin(a),t=Math.cos(a),i=r[4],c=r[5],s=r[6],l=r[7],h=r[8],f=r[9],o=r[10],d=r[11];return r!==e&&(e[0]=r[0],e[1]=r[1],e[2]=r[2],e[3]=r[3],e[12]=r[12],e[13]=r[13],e[14]=r[14],e[15]=r[15]),e[4]=i*t+h*n,e[5]=c*t+f*n,e[6]=s*t+o*n,e[7]=l*t+d*n,e[8]=h*t-i*n,e[9]=f*t-c*n,e[10]=o*t-s*n,e[11]=d*t-l*n,e}function N(e,r,a){var n=Math.sin(a),t=Math.cos(a),i=r[0],c=r[1],s=r[2],l=r[3],h=r[8],f=r[9],o=r[10],d=r[11];return r!==e&&(e[4]=r[4],e[5]=r[5],e[6]=r[6],e[7]=r[7],e[12]=r[12],e[13]=r[13],e[14]=r[14],e[15]=r[15]),e[0]=i*t-h*n,e[1]=c*t-f*n,e[2]=s*t-o*n,e[3]=l*t-d*n,e[8]=i*n+h*t,e[9]=c*n+f*t,e[10]=s*n+o*t,e[11]=l*n+d*t,e}function F(e,r,a){var n=Math.sin(a),t=Math.cos(a),i=r[0],c=r[1],s=r[2],l=r[3],h=r[4],f=r[5],o=r[6],d=r[7];return r!==e&&(e[8]=r[8],e[9]=r[9],e[10]=r[10],e[11]=r[11],e[12]=r[12],e[13]=r[13],e[14]=r[14],e[15]=r[15]),e[0]=i*t+h*n,e[1]=c*t+f*n,e[2]=s*t+o*n,e[3]=l*t+d*n,e[4]=h*t-i*n,e[5]=f*t-c*n,e[6]=o*t-s*n,e[7]=d*t-l*n,e}function L(e,r,a,n,t){var i=1/Math.tan(r/2),c;return e[0]=i/a,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=i,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=-1,e[12]=0,e[13]=0,e[15]=0,t!=null&&t!==1/0?(c=1/(n-t),e[10]=(t+n)*c,e[14]=2*t*n*c):(e[10]=-1,e[14]=-2*n),e}var S=L;function C(e,r,a,n){var t,i,c,s,l,h,f,o,d,p,y=r[0],w=r[1],M=r[2],P=n[0],u=n[1],v=n[2],g=a[0],x=a[1],m=a[2];return Math.abs(y-g)<V&&Math.abs(w-x)<V&&Math.abs(M-m)<V?b(e):(f=y-g,o=w-x,d=M-m,p=1/Math.hypot(f,o,d),f*=p,o*=p,d*=p,t=u*d-v*o,i=v*f-P*d,c=P*o-u*f,p=Math.hypot(t,i,c),p?(p=1/p,t*=p,i*=p,c*=p):(t=0,i=0,c=0),s=o*c-d*i,l=d*t-f*c,h=f*i-o*t,p=Math.hypot(s,l,h),p?(p=1/p,s*=p,l*=p,h*=p):(s=0,l=0,h=0),e[0]=t,e[1]=s,e[2]=f,e[3]=0,e[4]=i,e[5]=l,e[6]=o,e[7]=0,e[8]=c,e[9]=h,e[10]=d,e[11]=0,e[12]=-(t*y+i*w+c*M),e[13]=-(s*y+l*w+h*M),e[14]=-(f*y+o*w+d*M),e[15]=1,e)}function q(){var e=new z(3);return z!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e}function A(e,r,a){var n=new z(3);return n[0]=e,n[1]=r,n[2]=a,n}(function(){var e=q();return function(r,a,n,t,i,c){var s,l;for(a||(a=3),n||(n=0),t?l=Math.min(t*a+n,r.length):l=r.length,s=n;s<l;s+=a)e[0]=r[s],e[1]=r[s+1],e[2]=r[s+2],i(e,e,c),r[s]=e[0],r[s+1]=e[1],r[s+2]=e[2];return r}})();function D(e,r,a,n){const t=I(r,a,n),i=Y(e),c=B();return O(c,i,t),c}function I(e={x:0,y:0,z:0},r={x:0,y:0,z:0},a={x:1,y:1,z:1}){const n=B();return U(n,n,A(e.x,e.y,e.z)),R(n,n,r.x),N(n,n,r.y),F(n,n,r.z),G(n,n,A(a.x,a.y,a.z)),n}const _=A(0,0,0),W=A(0,1,0);function Y(e,r=60/180*Math.PI,a=.1,n=20,t={x:0,y:0,z:0}){const i=B(),c=A(t.x,t.y,t.z);U(i,i,c),C(i,c,_,W);const s=B();return S(s,r,e,a,n),O(s,s,i),s}const T=50;async function H(e){if(!navigator.gpu)throw new Error("Not Support WebGPU");const r=await navigator.gpu.requestAdapter();if(!r)throw new Error("No Adapter Found");const a=await r.requestDevice(),n=e.getContext("webgpu"),t=navigator.gpu.getPreferredCanvasFormat();n.configure({device:a,format:t,alphaMode:"opaque"});const i=window.devicePixelRatio||1;e.width=e.clientWidth*i,e.height=e.clientHeight*i;const c={width:e.width,height:e.height};return{device:a,context:n,format:t,size:c}}async function j(e,r,a,n){const t=await e.createRenderPipelineAsync({label:"Basic Pipline",layout:"auto",vertex:{module:e.createShaderModule({code:`
                @binding(0) @group(0) var<storage,read> mvpMatrix : array<mat4x4<f32>>;

                struct VertexOutput {
                    @builtin(position) Position : vec4<f32>,
                    @location(0) fragPosition: vec4<f32>
                };

                @vertex
                fn main(
                    @builtin(instance_index) index :u32,
                    @location(0) position : vec4<f32>,
                ) -> VertexOutput {
                    var output : VertexOutput;
                    output.Position = mvpMatrix[index] * position;
                    output.fragPosition = 0.5 * (position + vec4<f32>(0.1, 0.1, 0.1, 2.0));
                    return output;
                }`}),entryPoint:"main",buffers:[{arrayStride:12,attributes:[{shaderLocation:0,offset:0,format:"float32x3"}]}]},fragment:{module:e.createShaderModule({code:`
                @fragment
                fn main(
                    @location(0) fragPosition: vec4<f32>,
                ) -> @location(0) vec4<f32> {
                    return fragPosition;
                    // return f32(index) * vec4(0.02,0.02,0.02,1);
                }
                `}),entryPoint:"main",targets:[{format:r}]},primitive:{topology:"point-list",cullMode:"back",frontFace:"ccw"},depthStencil:{depthWriteEnabled:!0,depthCompare:"less",format:"depth24plus"}}),i=e.createTexture({size:a,format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT}),c=i.createView(),s=e.createBuffer({label:"GPUBuffer store vertex",size:3*n.byteLength,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST});e.queue.writeBuffer(s,0,n);const l=e.createBuffer({label:"GPUBuffer store 4x4 matrix",size:4*4*4*T,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST}),h=e.createBindGroup({label:"Big Group with Matrix",layout:t.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:l}}]});return{pipeline:t,vertexBuffer:s,mvpBuffer:l,group:h,depthTexture:i,depthView:c}}function X(e,r,a,n){const t=e.createCommandEncoder(),i={colorAttachments:[{view:r.getCurrentTexture().createView(),clearValue:{r:0,g:0,b:0,a:1},loadOp:"clear",storeOp:"store"}],depthStencilAttachment:{view:a.depthView,depthClearValue:1,depthLoadOp:"clear",depthStoreOp:"store"}},c=t.beginRenderPass(i);c.setPipeline(a.pipeline),c.setVertexBuffer(0,a.vertexBuffer),c.setBindGroup(0,a.group),c.draw(n,T),c.end(),e.queue.submit([t.finish()])}function K(e){const r=new FileReader;r.onload=a=>{const t=a.target.result.split(/\r?\n/);let i=[];for(const c of t)c.split(/[ ,]/).map(Number).forEach(l=>{i.push(l)});E=Float32Array.from(i,c=>c.valueOf()),Z()},r.readAsText(e)}async function Z(){const e=document.querySelector("canvas");if(!e)throw new Error("No Canvas");const{device:r,context:a,format:n,size:t}=await H(e),i=await j(r,n,t,E),c=[];let s=t.width/t.height;for(let f=0;f<T;f++){const o={x:Math.random()*4-2,y:-2+Math.random()*4,z:-6+4*Math.random()},d={x:8,y:8,z:8},p={x:0,y:0,z:0};c.push({position:o,rotation:p,scale:d})}const l=new Float32Array(T*4*4);function h(){for(let f=0;f<c.length-1;f++){const o=c[f],d=Date.now()/1e3;o.rotation.x=Math.sin(d+f),o.rotation.y=Math.cos(d+f);const p=D(s,o.position,o.rotation,o.scale);l.set(p,f*4*4)}r.queue.writeBuffer(i.mvpBuffer,0,l),E&&X(r,a,i,E.byteLength/4),requestAnimationFrame(h)}h(),window.addEventListener("resize",()=>{t.width=e.width=e.clientWidth*devicePixelRatio,t.height=e.height=e.clientHeight*devicePixelRatio,i.depthTexture.destroy(),i.depthTexture=r.createTexture({size:t,format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT}),i.depthView=i.depthTexture.createView(),s=t.width/t.height})}let E;document.getElementById("fileInput").addEventListener("change",e=>{const a=e.target.files[0];K(a)});
